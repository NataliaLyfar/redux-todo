{"version":3,"file":"static/js/851.77eb71c1.chunk.js","mappings":"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","sources":["components/TodoList/FilterList.jsx","components/TodoList/Todo.jsx","components/ui/form/Form.js","components/ui/form/Input.js","components/TodoFilter/TodoFilter.jsx","pages/FilterPage/FilterPage.jsx","redux/todo/todo-selectors.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleCompleted } from \"redux/todo/todo-actions\";\nimport styled from \"styled-components\";\nimport { Todo } from './Todo';\n// import { Text } from \"components/ui/Text\";\n\n\nconst List = styled.ul`\ndisplay: grid;\njustify-content: center;\ngrid-template-columns: repeat(auto-fill, minmax(370px, 1fr));\ngrid-gap: ${p => p.theme.space[5]}px;   \n`;\nconst TodoItem = styled.li`\nposition: relative;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: ${p => p.theme.space[0]}px;\nbox-shadow: 0px 6px 5px -5px ${p => p.theme.colors.tertiary};\n`;\n\n\nexport const FilterList = ({todos}) => {\nconst dispatch = useDispatch();\n\nreturn (\n  <>\n{todos &&   (<List>\n        {todos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List>)}\n    {/* {completedTodos.length > 0 && <Text>Done</Text>}\n    <List>\n        {completedTodos && completedTodos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List> */}\n  </>\n)\n};","import styled from \"styled-components\";\nimport { IconButton } from \"components/ui/buttons\";\nimport {MdOutlineDeleteForever} from 'react-icons/md';\n\n\nconst TodoWrapper = styled.div`\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\n`;\nconst TodoCheckbox = styled.input`\ncursor: pointer;\nwidth: 25px;\nheight: 25px;\nbackground-color: ${p => p.theme.colors.black};\ncolor: ${p => p.theme.colors.black};\n`;\n\nconst TodoText = styled.p`\nmargin: 0 ${p => p.theme.space[2]}px;\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-family: ${p => p.theme.fonts.body};\ncolor: ${p => p.theme.colors.black};\n`;\n\n\nexport const Todo = ({todo, completed, onToggleCompleted, onDelete}) => {\n   return (\n    <>\n      <TodoWrapper>\n        <TodoCheckbox \n          type=\"checkbox\"\n          checked={completed}\n          onChange={onToggleCompleted}\n          />\n        <TodoText\n          style={{textDecoration: completed && \"line-through\"}}>\n            {todo}\n        </TodoText>\n      </TodoWrapper>\n      <IconButton onClick={onDelete} icon={<MdOutlineDeleteForever/>} />\n    </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\nmargin: 0 auto;\ndisplay: flex;\nalign-items: center;\nmax-width: 370px;\nborder-bottom: 1 px solid ${p => p.theme.colors.accent};\noverflow: hidden;\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\ndisplay: inline-block;\nwidth: 370px;\nfont-family: ${p => p.theme.fonts.body};\nfont-size: ${p => p.theme.fontSizes.l};\nborder: none;\nborder-bottom: 2px solid ${p => p.theme.colors.accent};\ncolor: ${p => p.theme.colors.black};\nbackground-color: transparent;\noutline: none;\npadding: ${p => p.theme.space[1]}px ${p => p.theme.space[1]}px;\n  &::placeholder {\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.black};\n  };\n`;","import { useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { GoSearch } from \"react-icons/go\";\nimport { getTodos, getFilteredTodos } from \"redux/todo/todo-selectors\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Input } from \"components/ui/form\";\nimport { FilterList } from \"components/TodoList/FilterList\";\n\n\n\nconst Button = styled.button`\nmargin-left: -${p => p.theme.space[4]}px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: 0;\nbackground: transparent;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n  svg{\n    width: 20px;\n    height: 20px;\n    color: ${p => p.theme.colors.accent};\n  };\n`;\n\n\nexport const TodoFilter = () => {\nconst todos = useSelector(getTodos);\nconst [filteredTodos, setFilteredTodos] = useState([]);\nconst [query, setQuery] = useState('');\nconst {register, handleSubmit, resetField} = useForm();\n\nuseEffect(() => {\n  if(!query) {\n    return;\n  };\n  setFilteredTodos(getFilteredTodos(todos, query));\n},[query, todos]);\n\nconst onSubmit = data => {\n  console.log(data.todo);\n  if(data.todo === ''){\n    return toast.info(\"Fill the todo text\")\n  }\n  setQuery(data.todo);\n  resetField('todo');\n};\n\n\nreturn (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)} >\n        <Input\n        type=\"text\"\n        placeholder=\"start to search\"\n        {...register(\"todo\")}\n        autoComplete=\"off\"\n        autoFocus\n        />\n        <Button type=\"submit\"><GoSearch /></Button>\n      </Form>\n    <FilterList todos={filteredTodos} />\n    </>\n  );\n};\n\n\n\n","import { Container } from 'components/ui/Container';\nimport { TodoFilter } from 'components/TodoFilter';\nimport { Wrapper } from 'components/ui/Wrapper';\n\n\nconst FilterPage = () => {\n\n  return (\n    <Container>\n        <Wrapper>\n        <TodoFilter />\n        </Wrapper>\n    </Container>\n  );\n};\n\nexport default FilterPage;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getTodos = state => state.todos.items;\n\nexport const getFilteredTodos = (items, query) => {\n    return items.filter(({todo}) => \n    todo.toLowerCase().includes(query.toLowerCase()))   \n};\n\nexport const getCreatedTodos = createSelector(\n  [getTodos], (items) => {\n  return items.filter((todo) => (!todo.completed))\n  },\n);\n\nexport const getCompletedTodoCount = createSelector([getTodos], items => {\n    return items.reduce((total, todo) => (todo.completed ? total + 1 : total), 0);\n  });\n\nexport const getCompletedTodo = createSelector([getTodos], items => {\n  return items.filter((todo) => (todo.completed))\n});"],"names":["List","styled","p","theme","space","TodoItem","colors","tertiary","FilterList","todos","dispatch","useDispatch","map","id","todo","completed","onToggleCompleted","toggleCompleted","onDelete","deleteTodo","TodoWrapper","TodoCheckbox","black","TodoText","fontSizes","l","fontWeights","semibold","fonts","body","Todo","type","checked","onChange","style","textDecoration","onClick","icon","Form","accent","Input","m","Button","TodoFilter","useSelector","getTodos","useState","filteredTodos","setFilteredTodos","query","setQuery","useForm","register","handleSubmit","resetField","useEffect","getFilteredTodos","onSubmit","data","console","log","toast","I","placeholder","autoComplete","autoFocus","Container","Wrapper","state","items","filter","toLowerCase","includes","getCreatedTodos","createSelector","getCompletedTodoCount","reduce","total","getCompletedTodo"],"sourceRoot":""}