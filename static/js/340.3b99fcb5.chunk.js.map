{"version":3,"file":"static/js/340.3b99fcb5.chunk.js","mappings":"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","sources":["components/TodoList/FilterList.jsx","components/TodoList/Todo.jsx","components/ui/form/Form.js","components/ui/form/Input.js","components/TodoEditor/TodoEditor.jsx","components/TodoList/TodoList.jsx","components/Modal/Modal.jsx","components/Stats/Stats.jsx","pages/MyDayPage/MyDayPage.jsx","redux/todo/todo-selectors.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleCompleted } from \"redux/todo/todo-actions\";\nimport styled from \"styled-components\";\nimport { Todo } from './Todo';\n// import { Text } from \"components/ui/Text\";\n\n\nconst List = styled.ul`\ndisplay: grid;\njustify-content: center;\ngrid-template-columns: repeat(auto-fill, minmax(370px, 1fr));\ngrid-gap: ${p => p.theme.space[5]}px;   \n`;\nconst TodoItem = styled.li`\nposition: relative;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: ${p => p.theme.space[0]}px;\nbox-shadow: 0px 6px 5px -5px ${p => p.theme.colors.tertiary};\n`;\n\n\nexport const FilterList = ({todos}) => {\nconst dispatch = useDispatch();\n\nreturn (\n  <>\n{todos &&   (<List>\n        {todos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List>)}\n    {/* {completedTodos.length > 0 && <Text>Done</Text>}\n    <List>\n        {completedTodos && completedTodos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List> */}\n  </>\n)\n};","import styled from \"styled-components\";\nimport { IconButton } from \"components/ui/buttons\";\nimport {MdOutlineDeleteForever} from 'react-icons/md';\n\n\nconst TodoWrapper = styled.div`\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\n`;\nconst TodoCheckbox = styled.input`\ncursor: pointer;\nwidth: 25px;\nheight: 25px;\nbackground-color: ${p => p.theme.colors.black};\ncolor: ${p => p.theme.colors.black};\n`;\n\nconst TodoText = styled.p`\nmargin: 0 ${p => p.theme.space[2]}px;\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-family: ${p => p.theme.fonts.body};\ncolor: ${p => p.theme.colors.black};\n`;\n\n\nexport const Todo = ({todo, completed, onToggleCompleted, onDelete}) => {\n   return (\n    <>\n      <TodoWrapper>\n        <TodoCheckbox \n          type=\"checkbox\"\n          checked={completed}\n          onChange={onToggleCompleted}\n          />\n        <TodoText\n          style={{textDecoration: completed && \"line-through\"}}>\n            {todo}\n        </TodoText>\n      </TodoWrapper>\n      <IconButton onClick={onDelete} icon={<MdOutlineDeleteForever/>} />\n    </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\nmargin: 0 auto;\ndisplay: flex;\nalign-items: center;\nmax-width: 370px;\nborder-bottom: 1 px solid ${p => p.theme.colors.accent};\noverflow: hidden;\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\ndisplay: inline-block;\nwidth: 370px;\nfont-family: ${p => p.theme.fonts.body};\nfont-size: ${p => p.theme.fontSizes.l};\nborder: none;\nborder-bottom: 2px solid ${p => p.theme.colors.accent};\ncolor: ${p => p.theme.colors.black};\nbackground-color: transparent;\noutline: none;\npadding: ${p => p.theme.space[1]}px ${p => p.theme.space[1]}px;\n  &::placeholder {\n    font: inherit;\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.black};\n  };\n`;","import { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { addTodo } from \"redux/todo/todo-actions\";\nimport { MdPlaylistAdd } from 'react-icons/md';\nimport { Form, Input } from \"components/ui/form\";\n\n\nconst Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: 0;\nbackground: transparent;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n  svg{\n    width: 30px;\n    height: 30px;\n    color: ${p => p.theme.colors.accent};\n  };\n`;\n\n\nexport const TodoEditor = ({ onSave }) => {\nconst dispatch = useDispatch();\nconst {register, handleSubmit, resetField} = useForm();\n\nconst onSubmit = data => {\n  if(data.todo === ''){\n    return toast.info(\"Fill the todo text\")\n  }\n  dispatch(addTodo(data.todo));\n  onSave();\n  resetField('todo');\n};\n\nreturn (\n    <Form onSubmit={handleSubmit(onSubmit)} >\n        <Input\n        type=\"text\"\n        placeholder=\"start to write\"\n        {...register(\"todo\")}\n        autoComplete=\"off\"\n        autoFocus\n        />\n        <Button type=\"submit\"><MdPlaylistAdd/></Button>\n    </Form>\n  );\n};\n\nTodoEditor.propTypes = {\n  onSave: PropTypes.func,\n};","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleCompleted } from \"redux/todo/todo-actions\";\nimport { getCompletedTodo, getCreatedTodos } from \"redux/todo/todo-selectors\";\nimport styled from \"styled-components\";\nimport { Todo } from './Todo';\nimport { Text } from \"components/ui/Text\";\n\n\n\nconst List = styled.ul`\ndisplay: grid;\njustify-content: center;\ngrid-template-columns: repeat(auto-fill, minmax(370px, 1fr));\ngrid-gap: ${p => p.theme.space[2]}px;   \n`;\nconst TodoItem = styled.li`\nposition: relative;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nbox-shadow: 0px 6px 5px -5px ${p => p.theme.colors.tertiary};\n`;\n\n\nexport const TodoList = () => {\nconst todos = useSelector(getCreatedTodos);\nconst completedTodos = useSelector(getCompletedTodo);\nconst dispatch = useDispatch();\n\nreturn (\n  <>\n    <List>\n        {todos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List>\n    {completedTodos.length > 0 && <Text>Done</Text>}\n    <List>\n        {completedTodos && completedTodos.map(({id, todo, completed}) => \n            <TodoItem key={id}>\n                <Todo\n                todo={todo}\n                completed={completed}\n                onToggleCompleted={() => dispatch(toggleCompleted(id))}\n                onDelete={() => dispatch(deleteTodo(id))}\n                />\n            </TodoItem>\n        )}\n    </List>\n  </>\n)\n};","import { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { createPortal } from \"react-dom\";\n\nconst ModalBackdrop = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\nbackground-color: rgba(0, 0, 0, 0.5);\n`;\nconst ModalContent = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nmax-width: 370px;\nwidth: 100%;\npadding: ${p => p.theme.space[0]}px;\nbackground-color: ${p => p.theme.colors.white};\nborder-radius: ${p => p.theme.radii.small};\nbox-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({children, onClose}) => {\nuseEffect(() => {\n  window.addEventListener('keydown', closeModal);\n  return () => window.removeEventListener('keydown', closeModal);\n});\n\nconst closeModal = ({code, target, currentTarget}) => {\n  if(code === 'Escape' || target === currentTarget){\n    onClose();\n  };\n};\n\nreturn createPortal(\n  <ModalBackdrop onClick={closeModal}>\n    <ModalContent>{children}</ModalContent>\n  </ModalBackdrop>, modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useSelector } from \"react-redux\";\nimport { getCompletedTodoCount, getTodos } from \"redux/todo/todo-selectors\";\nimport styled from \"styled-components\";\n\nconst StatsList = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: flex-end;\n`;\nconst StatsItem = styled.li`\ndisplay: flex;\nmargin: 0;\ntext-align: center;\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[3]}px;\n  };\n`;\nconst StatsValue = styled.span`\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-family: ${p => p.theme.fonts.body};\n`;\nconst StatsLabel = styled.span`\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.bold};\nfont-family: ${p => p.theme.fonts.body};\ncolor: ${p => p.theme.colors.accent};\n`;\n\n\n\nexport const Stats = () => {\nconst todos = useSelector(getTodos);\nconst completed = useSelector(getCompletedTodoCount);\n\nreturn (\n   <StatsList>\n        <StatsItem>\n            <StatsLabel>Total</StatsLabel>\n            <StatsValue>&nbsp;{todos.length}</StatsValue>\n        </StatsItem>\n        <StatsItem>\n            <StatsLabel>Completed</StatsLabel>\n            <StatsValue>&nbsp;{completed}</StatsValue>\n        </StatsItem>\n    </StatsList>\n    );\n};","import {TodoEditor} from 'components/TodoEditor';\nimport { TodoList } from 'components/TodoList';\nimport { IconButton } from 'components/ui/buttons';\nimport { Section } from 'components/ui/Section';\nimport { Modal } from 'components/Modal';\nimport { useState } from 'react';\nimport { Stats } from 'components/Stats';\nimport { MdAddTask } from 'react-icons/md';\nimport { Container } from 'components/ui/Container';\n\n\nconst MyDayPage = () => {\nconst [showModal, setShowModal] = useState(false);\n\n\nconst toggleModal = () => setShowModal(prevState => !showModal);\n\n  return (\n    <Container>\n        <Section>\n          <Stats />\n          <IconButton onClick={toggleModal} icon={<MdAddTask />} />\n        </Section>\n        <TodoList />\n        {showModal && (\n        <Modal onClose={toggleModal}>\n          <TodoEditor  onSave={toggleModal}/>\n        </Modal>)}\n    </Container>\n  );\n};\n\nexport default MyDayPage;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getTodos = state => state.todos.items;\n\nexport const getFilteredTodos = (items, query) => {\n    return items.filter(({todo}) => \n    todo.toLowerCase().includes(query.toLowerCase()))   \n};\n\nexport const getCreatedTodos = createSelector(\n  [getTodos], (items) => {\n  return items.filter((todo) => (!todo.completed))\n  },\n);\n\nexport const getCompletedTodoCount = createSelector([getTodos], items => {\n    return items.reduce((total, todo) => (todo.completed ? total + 1 : total), 0);\n  });\n\nexport const getCompletedTodo = createSelector([getTodos], items => {\n  return items.filter((todo) => (todo.completed))\n});"],"names":["List","styled","p","theme","space","TodoItem","colors","tertiary","FilterList","todos","dispatch","useDispatch","map","id","todo","completed","onToggleCompleted","toggleCompleted","onDelete","deleteTodo","TodoWrapper","TodoCheckbox","black","TodoText","fontSizes","l","fontWeights","semibold","fonts","body","Todo","type","checked","onChange","style","textDecoration","onClick","icon","Form","accent","Input","m","Button","TodoEditor","onSave","useForm","register","handleSubmit","resetField","onSubmit","data","toast","addTodo","I","placeholder","autoComplete","autoFocus","TodoList","useSelector","getCreatedTodos","completedTodos","getCompletedTodo","length","Text","ModalBackdrop","ModalContent","white","radii","small","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","closeModal","removeEventListener","code","target","currentTarget","createPortal","StatsList","StatsItem","StatsValue","StatsLabel","bold","Stats","getTodos","getCompletedTodoCount","useState","showModal","setShowModal","toggleModal","prevState","Container","Section","state","items","getFilteredTodos","query","filter","toLowerCase","includes","createSelector","reduce","total"],"sourceRoot":""}